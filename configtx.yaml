# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    2P1OGenesis_Kafka:
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: kafka
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *Org1
                    - *Org2
                    - *Org3
                    - *Org4
                    - *Org5
                    - *Org6
                    - *Org7
                    - *Org8
                    - *Org9
                    - *Org10
                    - *Org11
                    - *Org12
                    - *Org13
                    - *Org14
                    - *Org15
                    - *Org16
                    - *Org17
                    - *Org18
                    - *Org19
                    - *Org20

    2P1OGenesis_BFTsmart:
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: bftsmart
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *Org1
                    - *Org2
                    - *Org3
                    - *Org4
                    - *Org5
                    - *Org6
                    - *Org7
                    - *Org8
                    - *Org9
                    - *Org10
                    - *Org11
                    - *Org12
                    - *Org13
                    - *Org14
                    - *Org15
                    - *Org16
                    - *Org17
                    - *Org18
                    - *Org19
                    - *Org20

    2PSecureChannel:
        Consortium: SampleConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1
                - *Org2
                - *Org3
                - *Org4
                - *Org5
                - *Org6
                - *Org7
                - *Org8
                - *Org9
                - *Org10
                - *Org11
                - *Org12
                - *Org13
                - *Org14
                - *Org15
                - *Org16
                - *Org17
                - *Org18
                - *Org19
                - *Org20
            Capabilities:
                <<: *ApplicationCapabilities

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Orderers

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/consensus.com/msp

    - &Org1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: PeersA

        # ID to load the MSP definition as
        ID: PeersAMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-a.com/msp

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.blockchain-a.com
              Port: 7051

    - &Org2
        Name: PeersB

        ID: PeersBMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-b.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-b.com
              Port: 7051

    - &Org3
        Name: PeersC

        ID: PeersCMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-c.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-c.com
              Port: 7051

    - &Org4
        Name: PeersD

        ID: PeersDMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-d.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-d.com
              Port: 7051

    - &Org5
        Name: PeersE

        ID: PeersEMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-e.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-e.com
              Port: 7051

    - &Org6
        Name: PeersF

        ID: PeersFMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-f.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-f.com
              Port: 7051

    - &Org7
        Name: PeersG

        ID: PeersGMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-g.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-g.com
              Port: 7051

    - &Org8
        Name: PeersH

        ID: PeersHMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-h.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-h.com
              Port: 7051

    - &Org9
        Name: PeersI

        ID: PeersIMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-i.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-i.com
              Port: 7051

    - &Org10
        Name: PeersJ

        ID: PeersJMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-j.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-j.com
              Port: 7051

    - &Org11
        Name: PeersK

        ID: PeersKMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-k.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-k.com
              Port: 7051

    - &Org12
        Name: PeersL

        ID: PeersLMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-l.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-l.com
              Port: 7051

    - &Org13
        Name: PeersM

        ID: PeersMMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-m.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-m.com
              Port: 7051

    - &Org14
        Name: PeersN

        ID: PeersNMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-n.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-n.com
              Port: 7051

    - &Org15
        Name: PeersO

        ID: PeersOMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-o.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-o.com
              Port: 7051


    - &Org16
        Name: PeersP

        ID: PeersPMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-p.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-p.com
              Port: 7051

    - &Org17
        Name: PeersQ

        ID: PeersQMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-q.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-q.com
              Port: 7051

    - &Org18
        Name: PeersR

        ID: PeersRMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-r.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-r.com
              Port: 7051


    - &Org19
        Name: PeersS

        ID: PeersSMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-s.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-s.com
              Port: 7051

    - &Org20
        Name: PeersT

        ID: PeersTMSP

        MSPDir: crypto-config/peerOrganizations/blockchain-t.com/msp

        AnchorPeers:
            - Host: peer0.blockchain-t.com
              Port: 7051

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer0.consensus.com:7050
        - orderer1.consensus.com:7050
        - orderer2.consensus.com:7050
        - orderer3.consensus.com:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - kafka0:9092
            - kafka1:9092
            - kafka2:9092
            - kafka3:9092

    #JCS: BFT-SMaRt options
    BFTsmart:

        # ConnectionPoolSize: The size of the connection pool that links the golang component to the java component.
        ConnectionPoolSize: 20

        # RecvPort: The localhost TCP port from which the java component sends blocks to the golang component.
        RecvPort: 9999

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

################################################################################
#
#   CAPABILITIES
#
#   This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.  Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.1 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running v1.0.x,
        # but the modification of which would cause incompatibilities.  Users
        # should leave this flag set to true.
        V1_1: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # manipulated without concern for upgrading peers.  Set the value of the
    # capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Order is a catchall flag for behavior which has been
        # determined to be desired for all orderers running v1.0.x, but the
        # modification of which  would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be
    # safely manipulated without concern for upgrading orderers.  Set the value
    # of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.1 for Application is a catchall flag for behavior which has been
        # determined to be desired for all peers running v1.0.x, but the
        # modification of which would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_1: true
        # V1_1_PVTDATA_EXPERIMENTAL is an Application capability to enable the
        # private data capability.  It is only supported when using peers built
        # with experimental build tag.  When set to true, private data
        # collections can be configured upon chaincode instantiation and
        # utilized within chaincode Invokes.
        # NOTE: Use of this feature with non "experimental" binaries on the
        # network may cause a fork.
        V1_1_PVTDATA_EXPERIMENTAL: false
        # V1_1_RESOURCETREE_EXPERIMENTAL is an Application capability to enable
        # the resources capability. Currently this is needed for defining
        # resource-based access control (RBAC). RBAC helps set fine-grained
        # access control on system resources such as the endorser and various
        # system chaincodes. Default is v1.0-based access control based on
        # CHANNEL_READERS and CHANNEL_WRITERS.
        # NOTE: Use of this feature with non "experimental" binaries on
        # the network may cause a fork.
        V1_1_RESOURCETREE_EXPERIMENTAL: false
